% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rampChemPropQueries.R
\name{getChemicalProperties}
\alias{getChemicalProperties}
\title{Returns chemical properties given a metabolite list}
\usage{
getChemicalProperties(mets, propertyList = "all", db = RaMP())
}
\arguments{
\item{mets}{a list object of source prepended metabolite ids, representing a metabolite set of interest}

\item{propertyList}{an optional list of specific properties to extract.  Options include 'all' (default),  'smiles', 'inchi_key', 'inchi_key_prefix', 'inchi', 'mw', 'monoisotop_mass', 'formula', 'common_name'.
If a props list is not supplied, all property fields will be returned.}

\item{db}{a RaMP database object}
}
\value{
Returns chemical property information for the list of input metabolites and a query report reporting on the number of metabolite ids that were matched and the list of un-matched input ids.

The returned object (return_obj below) contains two results. Use str(return_obj) to see the structure described here.

\strong{return_obj$chem_props} chemical properties for all matched input ids.

\strong{return_obj$query_report} this reports on the query list size, the number of input ids
that were found in the database, and a list of metabolite ids that were not found in the database.
}
\description{
Returns chemical properties given a metabolite list
}
\examples{
\dontrun{
# metabolite list of interest
metabolites.of.interest = c("pubchem:64969",
                             "chebi:16958",
                             "chemspider:20549",
                             "kegg:C05598",
                             "chemspider:388809",
                             "pubchem:53861142",
                             "hmdb:HMDB0001138",
                             "hmdb:HMDB0029412")

chemical.classes <- getChemicalProperties(mets = metabolites.of.interest, db = rampDB)
}
}
